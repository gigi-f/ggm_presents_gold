{
  "$schema": "./schema.json",
  "version": 1,
  "updated": "2025-09-29",
  "project": "Gold Hunter",
  "summary": "Top-down 2D action-adventure built with Phaser 3. AI index for quick code navigation.",
  "entryPoints": {
    "game": "src/game.ts",
    "mainScene": "src/main.js",
    "uiScene": "src/scenes/UIScene.js",
    "testScene": "src/scenes/TestScene.js",
    "world": "src/lib/world.ts",
    "buildings": "src/lib/buildings.js",
    "transitions": "src/lib/transitions.ts",
    "inventory": "src/lib/inventory.ts",
    "combat": "src/lib/combat.ts",
    "economy": "src/lib/economy.ts",
    "constants": ["src/constants.js", "src/lib/constants.ts"]
  },
  "tags": [
    {
      "id": "engine.constants",
      "label": "Constants & configuration",
      "files": ["src/constants.js", "src/lib/constants.ts"],
      "anchors": [
        { "file": "src/constants.js", "contains": ["SCENES", "MAP_IDS", "DOOR_IDS"], "note": "Scene keys, map identifiers, door registry" },
        { "file": "src/lib/constants.ts", "contains": ["MAIN", "UI", "TEST"], "note": "TypeScript constants" }
      ]
    },
    {
      "id": "ui.framework",
      "label": "Unified UI helpers and registry",
      "files": ["src/lib/ui.ts", "src/main.js", "src/lib/inventory.ts"],
      "anchors": [
        { "file": "src/lib/ui.ts", "contains": ["createModal", "addTitle", "export const UI"], "note": "Modal builder, title helper, UI registry" },
        { "file": "src/main.js", "contains": ["UI as UIRegistry", "openShopDialog", "openPauseMenu"], "note": "Using shared UI + gating" },
        { "file": "src/lib/inventory.ts", "contains": ["showInventory", "hideInventory"], "note": "Inventory modal + registry open/close" }
      ]
    },
    {
      "id": "ui.worldmap",
      "label": "World Map (visited fog-of-war)",
      "files": ["src/main.js", "src/lib/ui.js"],
      "anchors": [
        { "file": "src/main.js", "contains": ["toggleWorldMap", "buildWorldMapContainer", "visitedMaps"], "note": "Modal world map with visited-only reveal (O to toggle)" },
        { "file": "src/lib/ui.js", "contains": ["createModal", "addTitle", "export const UI"], "note": "Shared modal and registry for world map overlay" }
      ]
    },
    {
      "id": "mechanics.doors",
      "label": "Door system & map transitions",
      "files": ["src/lib/world.ts", "src/lib/transitions.ts"],
      "anchors": [
        { "file": "src/lib/world.ts", "contains": ["createDoorsForMap"], "note": "Door registry -> sensor creation & overlaps" },
        { "file": "src/lib/world.ts", "contains": ["enterBuilding", "exitBuilding", "handleEdgeExit"], "note": "Door callbacks" },
        { "file": "src/lib/transitions.ts", "contains": ["scrollTransitionToMap", "beginTransition", "endTransition"], "note": "Scroll tween, locks" }
      ]
    },
    {
      "id": "world.terrain",
      "label": "Terrain & overlays",
      "files": ["src/lib/world.ts", "src/lib/biomes.ts"],
      "anchors": [
        { "file": "src/lib/world.ts", "contains": ["createTerrainZoneFromCells", "createTallGrassZoneFromCells"], "note": "Slowing terrain + non-blocking tall grass overlay" },
        { "file": "src/lib/biomes.ts", "contains": ["Tall grass patches"], "note": "Plains biome grass generation (seeded)" }
      ]
    },
    {
      "id": "mechanics.buildings",
      "label": "Procedural buildings & collisions",
      "files": ["src/lib/buildings.js"],
      "anchors": [
        { "file": "src/lib/buildings.js", "contains": ["createShopBuilding"], "note": "Shop footprint, walls, door gap" },
        { "file": "src/lib/buildings.js", "contains": ["ENABLE_ROOF"], "note": "Roof toggle" }
      ]
    },
    {
      "id": "mechanics.inventory",
      "label": "Inventory & equipment",
      "files": ["src/lib/inventory.ts", "src/main.js", "src/scenes/UIScene.js"],
      "anchors": [
        { "file": "src/lib/inventory.ts", "contains": ["addToInventory", "equipWeapon", "equipShield"], "note": "Core inventory ops" },
        { "file": "src/main.js", "contains": ["pickupMeleeWeapon", "pickupShield", "updateEquipmentHUD"], "note": "Scene glue" },
        { "file": "src/scenes/UIScene.js", "contains": ["updateWeaponDisplay", "updateShieldDisplay"], "note": "HUD equip icons" }
      ]
    },
    {
      "id": "mechanics.combat",
      "label": "Combat (melee, shield)",
      "files": ["src/lib/combat.ts", "src/main.js"],
      "anchors": [
        { "file": "src/lib/combat.ts", "contains": ["swingMeleeWeapon", "raiseShield", "lowerShield"], "note": "Combat helpers" },
        { "file": "src/main.js", "contains": ["meleeWeaponSwinging", "shieldRaised"], "note": "State & event bindings" }
      ]
    },
    {
      "id": "mechanics.stamina",
      "label": "Stamina (regen, drains, HUD)",
      "files": ["src/main.js", "src/scenes/UIScene.js", "src/lib/combat.ts"],
      "anchors": [
        { "file": "src/main.js", "contains": ["stamina", "staminaRegenPerSec", "updateStaminaBar"], "note": "Scene state + HUD push" },
        { "file": "src/scenes/UIScene.js", "contains": ["createStaminaBar", "updateStaminaBar"], "note": "HUD stamina bar" },
        { "file": "src/lib/combat.ts", "contains": ["Too exhausted to swing"], "note": "Swing costs stamina" }
      ]
    },
    {
      "id": "mechanics.economy",
      "label": "Economy (currencies, wallet, HUD)",
      "files": ["src/lib/economy.ts", "src/lib/world.ts", "src/scenes/UIScene.js", "src/main.js"],
      "anchors": [
        { "file": "src/lib/economy.ts", "contains": ["CURRENCIES", "initWallet", "addToWallet"], "note": "Registry + wallet" },
        { "file": "src/lib/world.ts", "contains": ["placeObjectOnGrid", "spawnCurrency"], "note": "Currency objects & ids" },
        { "file": "src/main.js", "contains": ["pickupCurrency", "initWallet"], "note": "Wallet wiring" },
        { "file": "src/scenes/UIScene.js", "contains": ["updateCurrency"], "note": "HUD totals & icons" }
      ]
    },
    {
      "id": "engine.input",
      "label": "Input bindings",
      "files": ["src/main.js"],
      "anchors": [
        { "file": "src/main.js", "contains": ["input.keyboard.on(", "keys = {"] , "note": "Keys + handlers" }
      ]
    },
    {
      "id": "engine.scenes",
      "label": "Scene bootstrapping",
      "files": ["src/game.ts", "src/main.js", "src/scenes/UIScene.js"],
      "anchors": [
        { "file": "src/game.ts", "contains": ["new Phaser.Game", "scene"], "note": "Game config" },
        { "file": "src/main.js", "contains": "create(", "note": "Main scene lifecycle (see also transitionToMap & createMapObjects)" },
        { "file": "src/scenes/UIScene.js", "contains": "events.emit('create')", "note": "UI lifecycle & ready signal" }
      ]
    }
    ,
    {
      "id": "ui.minimap",
      "label": "Mini-map overlay",
      "files": ["src/main.js"],
      "anchors": [
        { "file": "src/main.js", "contains": ["toggleMiniMap", "buildMiniMapContainer", "refreshMiniMap", "updateMiniMapEntities"], "note": "HUD overlay + markers (doors/enemies/NPCs)" }
      ]
    }
    ,
    {
      "id": "engine.save",
      "label": "Save/Load",
      "files": ["src/main.js"],
      "anchors": [
        { "file": "src/main.js", "contains": ["saveGame()", "loadGame()"], "note": "localStorage v1 schema from Pause Menu" }
      ]
    }
  ]
}
